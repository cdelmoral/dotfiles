#!/usr/bin/env bash

# Ensure an org alias is provided
if [ -z "$1" ]; then
    echo "Usage: $0 <salesforce_org_alias> [username]"
    exit 1
fi

ORG_ALIAS=$1
USERNAME=$2

# If username is not provided, query and select a user
if [ -z "$USERNAME" ]; then
    # Query all users in the org and store them in a variable
    if ! USER_LIST=$(sf data query -q "SELECT Id, Name FROM User" -o "$ORG_ALIAS" --json); then
        echo "Failed to retrieve users. Check your Salesforce CLI connection."
        exit 1
    fi

    # Use fzf to select a user
    SELECTED_USER=$(echo "$USER_LIST" | jq -r '.result.records[] | "\(.Id) \(.Name)"' | fzf)

    # Check if a user was selected
    if [ -z "$SELECTED_USER" ]; then
        echo "No user selected. Exiting."
        exit 1
    fi

    # Extract User Id from the selected entry
    USER_ID=$(echo "$SELECTED_USER" | awk '{print $1}')
else
    # Username was provided as argument, query for the user
    if ! USER_QUERY=$(sf data query -q "SELECT Id, Name FROM User WHERE Username = '$USERNAME'" -o "$ORG_ALIAS" --json); then
        echo "Failed to retrieve user with username: $USERNAME. Check your Salesforce CLI connection."
        exit 1
    fi

    # Extract user information
    USER_ID=$(echo "$USER_QUERY" | jq -r '.result.records[0].Id // empty')
    USER_NAME=$(echo "$USER_QUERY" | jq -r '.result.records[0].Name // empty')

    # Check if user was found
    if [ -z "$USER_ID" ]; then
        echo "No user found with name: $USERNAME"
        exit 1
    fi

    SELECTED_USER="$USER_ID $USER_NAME"
fi

# Query all DebugLevel records
if ! DEBUG_LEVEL_LIST=$(sf data query -q "SELECT Id, DeveloperName FROM DebugLevel" -o "$ORG_ALIAS" --json --use-tooling-api); then
    echo "Failed to retrieve DebugLevels. Check your Salesforce CLI connection."
    exit 1
fi

# Use fzf to select a DebugLevel
SELECTED_DEBUG_LEVEL=$(echo "$DEBUG_LEVEL_LIST" | jq -r '.result.records[] | "\(.Id) \(.DeveloperName)"' | fzf)

# Check if a DebugLevel was selected
if [ -z "$SELECTED_DEBUG_LEVEL" ]; then
    echo "No DebugLevel selected. Exiting."
    exit 1
fi

# Extract DebugLevel Id from the selected entry
DEBUG_LEVEL_ID=$(echo "$SELECTED_DEBUG_LEVEL" | awk '{print $1}')

# Create a TraceFlag for the selected user
EXPIRATION_DATE=$(date -u -v+30M +"%Y-%m-%dT%H:%M:%SZ")
START_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
TRACE_FLAG_RESULT=$(sf data create record -s TraceFlag -v "LogType=DEVELOPER_LOG StartDate=$START_DATE ExpirationDate=$EXPIRATION_DATE TracedEntityId=$USER_ID DebugLevelId=$DEBUG_LEVEL_ID" -o "$ORG_ALIAS" --json --use-tooling-api)

# Check if TraceFlag was created successfully
if echo "$TRACE_FLAG_RESULT" | jq -e '.result.id' >/dev/null; then
    echo "TraceFlag created successfully for user: $SELECTED_USER with DebugLevel: $SELECTED_DEBUG_LEVEL"
else
    echo "Failed to create TraceFlag. Response: $TRACE_FLAG_RESULT"
    exit 1
fi
